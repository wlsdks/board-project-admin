debug: false
management:
  endpoints:
    enabled-by-default: false # 1. Endpoint all disable
    jmx:
      exposure:
        exclude: *
    web:
      exposure:
        include: info, health
  endpoint:
    info:
      enabled: true # 2. Enable specific endpoints
    health:
      enabled: true
#    web:
#      base-path: #[/변경된 경로]
#  server:
#    port: #포트번호

logging:
  level:
    com.fastcampus.boardprojectadmin: debug
    org.springframework.web.servlet: debug # request, response만 debug로 뽑는다.
    org.hibernate.orm.jdbc.bind: trace  # jpa를 사용할때 쿼리를 debug로 관찰할때 바인딩 파라미터를 보이게 한다. springBoot3.x부터는 이렇게 써야한다.

server.port: 8081 # multi module이니 동시에 돌리기위해 다른 포트를 사용한다.
spring:
  devtools:livereload.port: 35730 # devtools의 기능중 liveload도 다른 포트를 써줘야 한다.

  datasource:
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    defer-datasource-initialization: true # test용 db데이터를 만들수 있게 한다.
    hibernate.ddl-auto: create #엔티티로 ddl문을 만들어서 생성할것인가 설정
    open-in-view: false
    show-sql: true
    properties: # jpa 구현체 선택
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100 # 한번에 100개의 쿼리를 묶어서 bulk로 select가 가능하게 해준다. (N+1 해결방법중 하나)
        highlight_sql: true # 쿼리를 보기쉽게 하이라이트를 설정한다.
  #  h2.console.enabled: true # 인메모리 db로 h2를 쓸건데 활성화할건지 물어보는것

  sql.init.mode: always # resources 폴더에 만든 data.sql을 언제 작동시킬지 정하는것 (테스트, 아예 동작x, 리얼환경 중 선택)

  # thymeleaf 커스텀 설정 추가
  thymeleaf3:decoupled-logic: true

  # kakao OAuth2 정보 추가
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_OAUTH_CLIENT_ID}
            client-secret:
            authorization-grant-type: authorization_code
            #            redirect-uri: http://localhost:8080/login/oauth2/code/kakao #springBoot의 기본 방식을 적용
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao" #이렇게하면 알아서 {}안에 domain을 넣어준다. 근데 yml에서는 {}은 제대로 못읽는다.그래서 ""로 감싸주어야 한다.
            client-authentication-method: none #http method도 설정해준다.
        provider:
          kakao: # 공식 페이지에서 정보를 확인해서 넣어주자
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

---

spring:
  config.activate.on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      dialect: org.hibernate.dialect.H2Dialect